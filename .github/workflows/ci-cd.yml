name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      DOTNET_VERSION: "8.0.x"

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore source/ExtendedFileRenamerCLI/ExtendedFileRenamerCLI.sln

      - name: Build project
        run: dotnet build source/ExtendedFileRenamerCLI/ExtendedFileRenamerCLI.sln --configuration Release

      - name: Run tests
        run: dotnet test source/ExtendedFileRenamerCLI/ExtendedFileRenamerCLI.sln --no-build --verbosity normal

      - name: Upload test results
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./TestResults/

  build:
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Build project
        run: dotnet build --configuration Release

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: ./bin/Release/

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main'

    environment: staging

    steps:
      - name: Echo deploy
        run: echo "Deploying to staging..."

      - name: Use secret
        run: 'echo "Using token: ${{ secrets.DEPLOY_TOKEN }}"'
